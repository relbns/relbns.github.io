---
// Theme Toggle Component
---

<button
  id="theme-toggle"
  class="w-9 h-9 p-0 rounded-md hover:bg-muted inline-flex items-center justify-center transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2 focus:ring-offset-background"
  title="Toggle theme"
  aria-label="Toggle between light and dark mode"
  role="switch"
  aria-checked="false"
>
  <!-- Sun icon for light mode -->
  <svg
    id="theme-toggle-light-icon"
    class="h-4 w-4 transition-all duration-300"
    fill="none"
    viewBox="0 0 24 24"
    stroke="currentColor"
  >
    <path
      stroke-linecap="round"
      stroke-linejoin="round"
      stroke-width="2"
      d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"
    />
  </svg>
  
  <!-- Moon icon for dark mode -->
  <svg
    id="theme-toggle-dark-icon"
    class="hidden h-4 w-4 transition-all duration-300"
    fill="none"
    viewBox="0 0 24 24"
    stroke="currentColor"
  >
    <path
      stroke-linecap="round"
      stroke-linejoin="round"
      stroke-width="2"
      d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"
    />
  </svg>
</button>

<script>
  function updateThemeToggle() {
    const themeToggle = document.getElementById('theme-toggle');
    const themeToggleLightIcon = document.getElementById('theme-toggle-light-icon');
    const themeToggleDarkIcon = document.getElementById('theme-toggle-dark-icon');
    const isDark = document.documentElement.classList.contains('dark');
    
    // Update icons
    if (isDark) {
      themeToggleLightIcon?.classList.add('hidden');
      themeToggleDarkIcon?.classList.remove('hidden');
    } else {
      themeToggleLightIcon?.classList.remove('hidden');
      themeToggleDarkIcon?.classList.add('hidden');
    }
    
    // Update aria-checked for accessibility
    themeToggle?.setAttribute('aria-checked', isDark.toString());
  }

  function toggleTheme() {
    const isDark = document.documentElement.classList.contains('dark');
    
    if (isDark) {
      document.documentElement.classList.remove('dark');
      localStorage.setItem('theme', 'light');
    } else {
      document.documentElement.classList.add('dark');
      localStorage.setItem('theme', 'dark');
    }
    
    updateThemeToggle();
  }

  // Initialize theme toggle on page load
  document.addEventListener('DOMContentLoaded', () => {
    updateThemeToggle();
    
    const themeToggle = document.getElementById('theme-toggle');
    themeToggle?.addEventListener('click', toggleTheme);
  });

  // Update toggle when theme changes (for consistency across navigation)
  const observer = new MutationObserver(() => {
    updateThemeToggle();
  });
  
  observer.observe(document.documentElement, { 
    attributes: true, 
    attributeFilter: ['class'] 
  });
</script>
